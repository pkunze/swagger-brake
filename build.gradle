group 'io.redskap'
version '2.4.0-SNAPSHOT'

buildscript {
    repositories {
        mavenCentral()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath "com.github.spotbugs.snom:spotbugs-gradle-plugin:5.0.13"
    }
}

repositories {
    mavenCentral()
}

subprojects {
    group = rootProject.group
    version = rootProject.version

    apply plugin: 'java'
    apply plugin: 'maven-publish'
    apply plugin: 'checkstyle'
    apply plugin: 'com.github.spotbugs'

    sourceCompatibility = 1.8

    dependencies {
        compileOnly "com.github.spotbugs:spotbugs-annotations:${spotbugs.toolVersion.get()}"
        testCompileOnly "com.github.spotbugs:spotbugs-annotations:${spotbugs.toolVersion.get()}"

        compileOnly "org.projectlombok:lombok:1.18.24"
        annotationProcessor "org.projectlombok:lombok:1.18.24"

        implementation 'com.google.guava:guava:31.1-jre'
        implementation "org.apache.commons:commons-collections4:4.4"
        implementation "org.apache.commons:commons-lang3:3.12.0"
        implementation "org.apache.commons:commons-lang3:3.12.0"
        implementation "org.springframework:spring-context:5.3.24"
        implementation "org.springframework:spring-context:5.3.24"
        implementation "com.fasterxml.jackson.dataformat:jackson-dataformat-xml:2.14.1"

        testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.9.1'
        testImplementation 'org.junit.jupiter:junit-jupiter-api:5.9.1'
        testImplementation "org.assertj:assertj-core:3.23.1"
        testImplementation "org.springframework:spring-test:5.3.24"
        testImplementation "org.mockito:mockito-core:4.9.0"
        testImplementation "org.mockito:mockito-junit-jupiter:4.9.0"
    }

    checkstyle {
        toolVersion = '8.14'
    }

    tasks.withType(Checkstyle) {
        reports {
            xml.enabled false
            html.enabled true
        }
    }

    spotbugs {
        reportLevel = 'high'
        showProgress = false
    }

    test {
        useJUnitPlatform()
    }

    //<editor-fold desc="Uploading to central">
    apply plugin: 'signing'

    task javadocJar(type: Jar) {
        classifier = 'javadoc'
        from javadoc
    }

    task sourcesJar(type: Jar) {
        classifier = 'sources'
        from sourceSets.main.allSource
    }

    artifacts {
        archives javadocJar, sourcesJar
    }

    if (project.hasProperty('signing.keyId')) {
        signing {
            sign publishing.publications.mavenJava
        }
    }

    if (project.hasProperty('ossrhUsername') && project.hasProperty('ossrhPassword')) {
        publishing {
            publications {
                mavenJava(MavenPublication) {
                    groupId = project.group
                    artifactId = project.name
                    version = project.version

                    pom {
                        name 'Swagger Brake'
                        packaging 'jar'
                        description 'Swagger contract checker for breaking API changes'
                        url 'https://github.com/redskap/swagger-brake'

                        scm {
                            connection = 'scm:git:git://github.com/redskap/swagger-brake.git'
                            developerConnection = 'scm:git:ssh://github.com:redskap/swagger-brake.git'
                            url = 'https://github.com/redskap/swagger-brake'
                        }

                        licenses {
                            license {
                                name 'The Apache License, Version 2.0'
                                url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                            }
                        }

                        developers {
                            developer {
                                id 'galovics'
                                name 'Arnold Galovics'
                                email 'info@arnoldgalovics.com'
                            }
                        }
                        scm {
                            connection = 'scm:git:git://github.com/redskap/swagger-brake.git'
                            developerConnection = 'scm:git:ssh://github.com:redskap/swagger-brake.git'
                            url = 'https://github.com/redskap/swagger-brake'
                        }
                    }
                }
            }
            repositories {
                maven {
                    url = isReleaseBuild() ? 'https://oss.sonatype.org/service/local/staging/deploy/maven2/' : 'https://oss.sonatype.org/content/repositories/snapshots/'

                    credentials {
                        username = ossrhUsername
                        password = ossrhPassword
                    }
                }
            }
        }
    }
    //</editor-fold>
}

